name: (create-release) Cria Branch Release

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  setup-git:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Configurar Git
        run: |
          echo "Configurando Git..."
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          echo "Configuração do Git concluída."

      - name: Definir workspace
        run: cd ${{ github.workspace }}

  #      - name: (git fetch) Busca todas as branches
  #        run: git fetch --all

  create-release:
    runs-on: ubuntu-latest
    needs: setup-git
    steps:
      - name: Cache das tags do Git
        uses: actions/cache@v3
        with:
          path: |
            ~/.git-refs
          key: ${{ runner.os }}-git-${{ hashFiles('**/refs/tags') }}
          restore-keys: |
            ${{ runner.os }}-git-

#      - name: Verifica se a branch foi criada a partir de develop
#        run: |
#          echo "Verificando se a branch foi criada a partir de develop..."
#          BASE_BRANCH=$(git merge-base HEAD origin/develop)
#          if [ "$BASE_BRANCH" != "$(git rev-parse origin/develop)" ]; then
#            echo "Branches de release devem ser criadas a partir de develop."
#            exit 1
#          else
#            echo "Branch criada corretamente a partir de develop."
#          fi

      - name: Incrementar versão
        id: bump_version
        run: |
          cd ${{ github.workspace }}
          echo "Buscando todas as tags..."
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null)
          if [ -z "$latest_tag" ]; then
            new_version="v1.0.0"
            echo "Nenhuma tag encontrada. Definindo nova versão como v1.0.0"
          else
            new_version=$(echo $latest_tag | awk -F. -v OFS=. '{$NF++;print}')
            echo "Última tag encontrada: $latest_tag. Nova versão: $new_version"
          fi
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Cria tag com a nova versão
        run: |
          cd ${{ github.workspace }}
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}

      - name: Cria branch release
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [ -z "$latest_tag" ]; then
            new_version="v1.0.0"
          else
            new_version=$(echo $latest_tag | awk -F. -v OFS=. '{$NF++;print}')
          fi
          git checkout -b release/$new_version
          git push origin release/$new_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'Criando Pull Request para a release branch'
          branch: release/${{ env.new_version }}
          base: 'main'
          title: 'Pull Request para a release branch'
          body: |
            Este pull request inclui as seguintes alterações:
            - Atualizações na release branch
          draft: false  # Adicionado para garantir que o PR não seja criado como rascunho

      - name: Exibir link do Pull Request
        run: |
          echo "Link do Pull Request: ${{ steps.create-pull-request.outputs.pull-request-url }}"
