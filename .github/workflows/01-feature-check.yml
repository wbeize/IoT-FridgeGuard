name: (feature-check) Verifica Origem da Branch de Feature

on:
  push:
    branches:
      - 'develop'
  pull_request:
    branches:
      - 'release/*'
  workflow_dispatch:

#permissions:
#  contents: write
#  pull-requests: write

jobs:
  setup-git:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Configurar Git
        run: |
          echo "Configurando Git..."
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          echo "Configuração do Git concluída."

      - name: Verificar se estamos no diretório correto do repositório
        run: |
          if [ ! -d ".git" ]; then
            echo "Diretório .git não encontrado. Verifique se você está no diretório correto do repositório."
            exit 1
          fi

      - name: Obter título do commit mais recente
        id: get_commit_title
        run: echo "commit_title=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

  #      - name: Output Commit Message
  #        run: |
  #          echo "Commit Message: ${{ steps.commit_message.outputs.message }}"

  feature-check:
    runs-on: ubuntu-latest
    needs: setup-git
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Verifica origem da branch de feature
        run: |
          echo "Verificando origem da branch de feature..."
          git fetch --all
          git checkout develop || git checkout -b develop origin/develop
          DEVELOP_HEAD=$(git rev-parse origin/develop)
          LOCAL_DEVELOP_HEAD=$(git rev-parse develop)
          if [ "${{ github.event.pull_request.base.ref }}" != "develop" ] && [ "${{ github.event.pull_request.base.ref }}" != "$DEVELOP_HEAD" ] && [ "${{ github.event.pull_request.base.ref }}" != "$LOCAL_DEVELOP_HEAD" ]; then
            echo "Branches de feature devem ser criadas a partir de develop ou origin/develop."
            exit 1
          else
            echo "Branch de feature criada corretamente a partir de develop ou origin/develop."
          fi

#      - name: Create Pull Request
#        uses: peter-evans/create-pull-request@v5
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          commit-message: 'Criando Pull Request para a feature branch'
#          branch: ${{ github.head_ref }}
#          base: 'develop'
#          title: 'Pull Request para a feature branch'
#          body: |
#            Este pull request inclui as seguintes alterações:
#            - Atualizações na feature branch
#
#      - name: Exibir link do Pull Request
#        run: |
#          echo "Link do Pull Request: ${{ steps.create-pull-request.outputs.pull-request-url }}

#  create-pr:
#    runs-on: ubuntu-latest
#    needs: [setup-git, feature-check]
#    steps:
#      - name: Checkout do repositório
#        uses: actions/checkout@v2
#
#      - name: Grant permissions for GITHUB_TOKEN
#        env:
#          GITHUB_HEAD_REF: ${{ github.head_ref }}
#          GITHUB_REF: ${{ github.ref }}
#        run: |
#          git config user.name "github-actions[bot]"
#          git config user.email "github-actions[bot]@users.noreply.github.com"
#          git fetch origin
#          git checkout "${GITHUB_HEAD_REF}"
#          if [[ "${GITHUB_REF}" != refs/pull/*/merge ]]; then
#            git push --force-with-lease origin "${GITHUB_HEAD_REF}:${GITHUB_REF}"
#          else
#            echo "Skipping push to hidden ref ${GITHUB_REF}"
#          fi
#
#      - name: Create Pull Request
#        uses: peter-evans/create-pull-request@v5
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          commit-message: ${{ env.commit_title }}
#          branch: ${{ github.head_ref }}
#          base: 'develop'
#          title: 'Atualizações na feature branch'
#          body: |
#            Este pull request inclui as seguintes alterações:
#            - Atualizações na feature branch
#
#      - name: Exibir link do Pull Request
#        run: |
#          echo "Link do Pull Request: ${{ steps.create-pull-request.outputs.pull-request-url }}"